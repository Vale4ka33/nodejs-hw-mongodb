{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "ContactsHUB",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "Documentation of the contacts managing app."
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://contacts-app-vo2h.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Contacts",
      "description": "Operations about contacts."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve all contacts",
        "operationId": "getContacts",
        "description": "Fetch a list of all contacts with optional pagination, sorting, and filtering by contact type.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "example": 1,
            "description": "The page number to retrieve. Defaults to 1."
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 10
            },
            "description": "Number of contacts to return per page. Defaults to 10."
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "name"
            },
            "description": "Field by which to sort contacts. Default is _id. Other fields can be used for sorting."
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "asc"
            },
            "description": "Order in which to sort the results. Use 'asc' for ascending or 'desc' for descending."
          },
          {
            "in": "query",
            "name": "contactType",
            "schema": {
              "type": "string",
              "enum": [
                "work",
                "home",
                "personal"
              ],
              "example": "work"
            },
            "description": "Filter contacts by type. Possible values are 'work', 'home', and 'personal'."
          }
        ],
        "responses": {
          "200": {
            "description": "Contacts successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contacts!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/contact"
                          }
                        },
                        "page": {
                          "type": "integer",
                          "example": 2,
                          "description": "Current page number."
                        },
                        "perPage": {
                          "type": "integer",
                          "example": 4,
                          "description": "Number of contacts per page."
                        },
                        "totalItems": {
                          "type": "integer",
                          "example": 40,
                          "description": "Total number of contacts available."
                        },
                        "totalPages": {
                          "type": "integer",
                          "example": 10,
                          "description": "Total number of pages available."
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": true,
                          "description": "Indicates if there is a next page."
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true,
                          "description": "Indicates if there is a previous page."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create a new contact",
        "operationId": "postContact",
        "description": "Add a new contact with the provided details, including an optional photo.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "phoneNumber",
                  "email",
                  "isFavourite",
                  "contactType",
                  "userId"
                ],
                "properties": {
                  "name": {
                    "description": "Full name of the contact.",
                    "type": "string",
                    "example": "Valentina Ukho"
                  },
                  "phoneNumber": {
                    "description": "Contact's phone number in international format.",
                    "type": "string",
                    "example": "+380000000002"
                  },
                  "email": {
                    "description": "Contact's email address.",
                    "type": "string",
                    "example": "valentina.ukho@example.com"
                  },
                  "isFavourite": {
                    "description": "Indicates whether the contact is marked as favourite.",
                    "type": "boolean",
                    "default": false
                  },
                  "contactType": {
                    "description": "Category of the contact. Acceptable values are 'work', 'home', or 'personal'.",
                    "type": "string",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ]
                  },
                  "userId": {
                    "description": "ID of the user who owns the contact.",
                    "type": "string",
                    "example": "65e4decdd286b30065d54af9"
                  },
                  "photo": {
                    "description": "Optional URL of the contact's photo.",
                    "type": "string",
                    "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "New contact has been created successfully!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/contacts/{id}": {
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update contact by its id",
        "operationId": "updateContactById",
        "description": "Update specific details of a contact identified by its ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66a277d1926b34d43fca92f3"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Contact's name.",
                    "type": "string",
                    "example": "Valentina Ukho"
                  },
                  "phoneNumber": {
                    "description": "Contact's phone number.",
                    "type": "string",
                    "example": "+380000000002"
                  },
                  "email": {
                    "description": "Contact's email address.",
                    "type": "string",
                    "example": "valentina.ukho@example.com"
                  },
                  "isFavourite": {
                    "description": "Indicates whether the contact is marked as favourite.",
                    "type": "boolean",
                    "default": false
                  },
                  "contactType": {
                    "description": "Category of the contact. Acceptable values are 'work', 'home', or 'personal'.",
                    "type": "string",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ]
                  },
                  "userId": {
                    "description": "ID of the user who owns the contact.",
                    "type": "string",
                    "example": "65e4decdd286b30065d54af9"
                  },
                  "photo": {
                    "description": "Optional URL of the contact's photo.",
                    "type": "string",
                    "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Contact successfully updated."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get contact by its id",
        "operationId": "getContactById",
        "description": "Retrieve a specific contact from the system using its ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66a277d1926b34d43fca92f3"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact successfully retrieved by ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Contact successfully retrieved by ID."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete contact by its id",
        "operationId": "deleteContactById",
        "description": "Delete a contact by its ID from the system.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66a277d1926b34d43fca92f3"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Contact successfully deleted."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register new user",
        "operationId": "registerUser",
        "description": "Register a new user in the application with the provided details",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "description": "The full name of the user",
                    "type": "string",
                    "example": "Valentina Ukho"
                  },
                  "email": {
                    "description": "The email address of the user",
                    "type": "string",
                    "example": "petrova.hfhfhf@gmail.com"
                  },
                  "password": {
                    "description": "The password chosen by the user",
                    "type": "string",
                    "example": "securePassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Authenticate a user using their email and password credentials",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "Registered email address of the user",
                    "type": "string",
                    "example": "petrova.hfhfhf@gmail.com"
                  },
                  "password": {
                    "description": "Password associated with the user's account",
                    "type": "string",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "User successfully logged in!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "8KtsPA/HhygGeUR8Gi+Tan/dQlwSb3SntqFklzB7"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "description": "End the user's session and log them out from the application",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "User successfully logged out, no content returned"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh session",
        "operationId": "refreshUserSession",
        "description": "Refresh session of logged in user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Refresh session",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accesToken"
                      ],
                      "properties": {
                        "accesToken": {
                          "type": "string",
                          "example": "PPtNkZLPZDZEKqdIIERSR/ifktpk8zv7R++KDG2l"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/send-reset-email": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Request reset password",
        "operationId": "requestResetEmail",
        "description": "Send a request to reset the user password via email",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "description": "The email address associated with the user account",
                    "type": "string",
                    "example": "petrova.hfhfhf@gmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email with password reset instructions sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Password reset email has been sent successfully."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "properties": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/reset-pwd": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Reset password",
        "operationId": "resetPassword",
        "description": "Reset user password using the token received via email",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "password",
                  "token"
                ],
                "properties": {
                  "password": {
                    "description": "The new password to be set for the user",
                    "type": "string",
                    "example": "54321"
                  },
                  "token": {
                    "description": "Token received via email for password reset",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2NmM4YTVkNmUxMmIxY2NmMmUwYzdiYzIiLCJlbWFpbCI6InNlcmhpaWl2YW5jaGVua290YW5AZ21haWwuY29tIiwiaWF0IjoxNzI1MDE5OTczLCJleHAiOjE3MjUwMjAyNzN9.o1mK-nQ-ZGFcwqDkWEXrmBp9eBK8xDG5A_zNgANZl4M"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password successfully reset",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Password has been successfully reset."
                    },
                    "data": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "contact": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "phoneNumber",
          "email",
          "isFavourite",
          "contactType",
          "userId"
        ],
        "properties": {
          "_id": {
            "description": "Unique identifier for the contact",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "Full name of the contact person",
            "type": "string",
            "example": "Valentina Ukho"
          },
          "phoneNumber": {
            "description": "The phone number associated with the contact",
            "type": "string",
            "example": "+380000000002"
          },
          "email": {
            "description": "Email address of the contact",
            "type": "string",
            "example": "petrova.hfhfhf@gmail.com"
          },
          "isFavourite": {
            "description": "Indicates if the contact is marked as a favorite",
            "type": "boolean",
            "default": false
          },
          "contactType": {
            "description": "Specifies the category of the contact, options include: work, home, personal",
            "type": "string",
            "enum": [
              "work",
              "home",
              "personal"
            ]
          },
          "userId": {
            "description": "Identifier for the user who owns the contact",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "photo": {
            "description": "URL link to the contact's photo",
            "type": "string",
            "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
          }
        }
      },
      "user": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "email",
          "password"
        ],
        "properties": {
          "_id": {
            "description": "Unique identifier for the user",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "Full name of the user",
            "type": "string",
            "example": "Valentina Ukho"
          },
          "email": {
            "description": "Email address of the user",
            "type": "string",
            "example": "petrova.hfhfhf@gmail.com"
          },
          "password": {
            "description": "User's password, typically stored in a hashed format",
            "type": "string",
            "example": "12345"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "enum": [
                    "Unauthorized",
                    "Session not found",
                    "Access token is expired",
                    "Please provide authorization header",
                    "Auth header should be type of Bearer",
                    "Refresh token is expired",
                    "Token is expired or invalid"
                  ]
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Access token expired or not provided",
                        "Session not found",
                        "Access token is expired",
                        "Please provide authorization header",
                        "Auth header should be type of Bearer",
                        "Refresh token is expired",
                        "Token is expired or invalid"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "enum": [
                    "Contact not found",
                    "User not found"
                  ]
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Contact not found",
                        "User not found",
                        "Route not found"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "ConflictError",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "ConflictError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email in use"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}